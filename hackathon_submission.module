<?php

error_reporting(E_ALL);
ini_set('error_reporting', E_ALL);
function hackathon_submission_permission()
{
    return array(
    "add hackathon_submission" => array(
            "title" => t("Add/edit hackathon_submission"),
            "description" => t("Allows users to add/edit submission.")
        ),
        "access hackathon_submission" => array(
            "title" => t("Access hackathon_submission"),
            "description" => t("Allows users to view converted.")
        ),
	"manage hackathon_submission" => array(
            "title" => t("Manage hackathon_submission Files"),
            "description" => t("Allows users to view all submissions.")
        ),
	"convert hackathon_submission" => array(
            "title" => t("Files to be converted"),
            "description" => t("Allows admin to see files to be convert from pspice to kicad.")
        ),
    "administer hackathon_submission settings" => array(
            "title" => t("Administer hackathon settings"),
            "description" => t("Allows admin to add/edit submission settings")
        ),
    );
}

function hackathon_submission_menu()
{
    $items = array();
    $items["hackathon-submission/proposed"] = array(
        "title" => "List of my submissions",
        "page callback" => "hackathon_submission_display_my_submissions",
        "access arguments" => array(
            "access hackathon_submission"
        ),
        "type" => MENU_CALLBACK
    );
    $items["hackathon-submission/all-submissions"] = array(
        "title" => "List of all submissions",
        "page callback" => "hackathon_submission_display_final_submissions",
        "access arguments" => array(
            "manage hackathon_submission"
        ),
    );
    $items["hackathon-submission/all-submissions/literature-survey"] = array(
        "title" => "List of all Literature survey submissions",
        "page callback" => "hackathon_submission_display_all_submissions",
        "access arguments" => array(
            "manage hackathon_submission"
        ),
        'type' => MENU_LOCAL_TASK,
        'weight' => 1
    );
    $items["hackathon-submission/all-submissions/final-reports"] = array(
        "title" => "List of all Final submissions",
        "page callback" => "hackathon_submission_display_final_submissions",
        "access arguments" => array(
            "manage hackathon_submission"
        ),
        'type' => MENU_DEFAULT_LOCAL_TASK,
        'weight' => 0
    );
    $items["hackathon-submission/view-details/final-submission"] = array(
        "title" => "View submission details",
        'page callback' => 'drupal_get_form',
        "page arguments" => array("hackathon_submission_view_final_submissions_details_form"),
        "access arguments" => array(
            "manage hackathon_submission"
        ),
    );
    $items["hackathon-submission/download-emails"] = array(
        "title" => "List of all submissions",
        "page callback" => "hackathon_submission_download_emails",
        "access arguments" => array(
            "manage hackathon_submission"
        ),
        "type" => MENU_CALLBACK
    );
    /*$items['hackathon-submission/download/file'] = array(
        'title' => 'File Download',
        'description' => 'File Download', 
        'page callback' => 'hackathon_submission_download_file',
        'access arguments' => array("access hackathon_submission"),
        'type' => MENU_CALLBACK,
        
    );*/
    $items['hackathon-submission/generate-report/literature-survey'] = array(
            'title' => 'Generate Literature Survey Report',
            'description' => 'Generate Literature Survey Report',
            'page callback' => 'download_literature_survey_report',
            'access arguments' => array(
                'access hackathon_submission'
            ),
            'type' => MENU_CALLBACK,
            'file' => 'latex.inc'
    );
     $items['hackathon-submission/generate-report/final-submission'] = array(
        'title' => 'Generate Final Submission Report',
        'description' => 'Generate Final Submission Report',
        'page callback' => 'download_final_submission_report',
        'access arguments' => array(
            'access hackathon_submission'
        ),
        'type' => MENU_CALLBACK,
        'file' => 'latex.inc'
    );
    $items["hackathon-submission/add/literature-report"] = array(
        "title" => "CSMD submission",
        "page callback" => 'add_literature_report_submission',
        /*'page arguments' => array(
            'add_literature_report_submission'
        ),*/
        "access arguments" => array(
            "add hackathon_submission"
        ),
        "type" => MENU_CALLBACK,
        'file' => 'add_submission.inc'
    );
    $items["hackathon-submission/add/final-submission"] = array(
        "title" => "CSMD Final submission",
        "page callback" => 'add_final_submission_report_submission',
        /*'page arguments' => array(
            'add_literature_report_submission'
        ),*/
        "access arguments" => array(
            "add hackathon_submission"
        ),
        "type" => MENU_CALLBACK,
        'file' => 'final_submission.inc'
    );
    $items["hackathon-submission/add/project-files"] = array(
        "title" => "Upload Project Files",
        "page callback" => 'add_project_files_submission',
        /*"page arguments" => array(
            "hackathon_submission_add_project_files_form"
        ),*/
        "access arguments" => array(
            "add hackathon_submission"
        ),
        "type" => MENU_CALLBACK,
        "file" => 'final_submission.inc'
    );
    $items["hackathon-submission/edit/literature-report"] = array(
        "title" => "Edit CSMD submission",
        "page callback" => 'drupal_get_form',
        'page arguments' => array(
            'edit_literature_report_submission_form'
        ),
        "access arguments" => array(
            "add hackathon_submission"
        ),
        "type" => MENU_CALLBACK,
        'file' => 'edit_submission.inc'
    );
    $items["hackathon-submission/edit/final-submission"] = array(
        "title" => "Edit CSMD Final submission",
        "page callback" => 'drupal_get_form',
        'page arguments' => array(
            'edit_final_submission_form'
        ),
        "access arguments" => array(
            "add hackathon_submission"
        ),
        "type" => MENU_CALLBACK,
        'file' => 'final_submission.inc'
    );
    $items["hackathon-submission/edit/project-files"] = array(
        "title" => "Edit CSMD Project Files",
        "page callback" => 'drupal_get_form',
        'page arguments' => array(
            'edit_project_files_form'
        ),
        "access arguments" => array(
            "add hackathon_submission"
        ),
        "type" => MENU_CALLBACK,
        'file' => 'final_submission.inc'
    );
    /* ADMIN SETTINGS */
    $items['admin/settings/hackathon-submission'] = array(
        'title' => 'Hackathon submission Settings',
        'description' => 'Hackathon submission Settings',
        'page callback' => 'drupal_get_form',
        'page arguments' => array(
            'hackathon_submission_settings_form'
        ),
        'access arguments' => array(
            'administer hackathon_submission settings'
        ),
        'type' => MENU_NORMAL_ITEM,
        'file' => 'settings.inc'
    );
    
    return $items;
}

function hackathon_submission_check_valid_filename($file_name) {
  if (preg_match("/\\s/", $file_name))
    return FALSE;
  else
    /*if (substr_count($file_name, ".") > 1)
      return FALSE;
    else*/
    return TRUE;
}

function hs_check_special_characters($string){
    //$whiteListed = "\#\^\+\-\_\.\&()%\/";
    if(preg_match("/\\s/", $string))
        return FALSE;
    else
        return TRUE;
}

function hackathon_submission_upload_path() {
  return $_SERVER['DOCUMENT_ROOT'] . base_path() . 'hackathon_submission_uploads/';
}

function hackathon_submission_convert_path() {
  return $_SERVER['DOCUMENT_ROOT'] . base_path() . 'hackathon_submission_converts';
}

/*function hackathon_submission_add_form_display()
{
    $page_content = "";
    $hackathon_submission_add_form = drupal_get_form("hackathon_submission_add_form");
    $page_content = drupal_render($hackathon_submission_add_form);
    return $page_content;
}*/


function hackathon_submission_display_my_submissions()
{
    global $user;
    /* get pending proposals to be approved */
    if ($user->uid == 0)
    {
        $msg = drupal_set_message(t('It is mandatory to login on this website to view your proposals. If you are new user please create a new account first.'), 'error');
        //drupal_goto('/pssp');
        drupal_goto('user/login', array('query' => drupal_get_destination()));
        return $msg;
    }
    $output = "<p>Final Submission</p>";
    $final_submission_rows = array();
    $query = db_select('hackathon_literature_survey');
    $query->fields('hackathon_literature_survey');
    //$query->condition('approval_status', 2);
    $query->condition('uid',$user->uid);
    $query->orderBy('id', 'DESC');
    $my_proposals_q = $query->execute();
    $my_proposals_data = $my_proposals_q->fetchObject();
    if(!$my_proposals_data){
        drupal_set_message('We have not received your submission', 'error');
        drupal_goto('');
    }
    $query = db_select('hackathon_final_submission');
    $query->fields('hackathon_final_submission');
    $query->condition('uid',$user->uid);
    $query->condition('literature_survey_id', $my_proposals_data->id);
    $query->orderBy('id', 'DESC');
    $final_submission_q = $query->execute();
    $final_submission_data = $final_submission_q->fetchObject();
    $today = date("Y-m-d H:i:s");
    $final_submission_last_date = "2021-06-30 23:59:59.0";
    $query = db_select('hackathon_final_submission_project_files');
    $query->fields('hackathon_final_submission_project_files');
    $query->condition('literature_submission_id', $submission_id);
    $project_files_data = $query->execute()->fetchObject();
    /*if(!$project_files_data){
     $output .= "<p>You have not yet uploaded your project files submission.</p>";
    }
    else{
       $output .= l('Edit Project Files', 'hackathon-submission/edit/project-files/' . $my_proposals_data->id);
    }*/
    if($today > $final_submission_last_date){
        $action =   l('Download Final Report', 'hackathon-submission/generate-report/final-submission/' . $final_submission_last_date->id);  
    }
    else{
        if(!$final_submission_data){
            $action =   l('Add Final Submission', 'hackathon-submission/add/final-submission') . ' | ' . l('Edit Project files', 'hackathon-submission/edit/project-files/' . $my_proposals_data->id);
            $creation_date = "Final Submission not received";
        }
        else{
            $action =   l('Download Final Report', 'hackathon-submission/generate-report/final-submission/' . $final_submission_data->id) . ' | ' . l('Edit Final Report', 'hackathon-submission/edit/final-submission/' . $final_submission_data->id) . ' | ' . l('Edit Project files', 'hackathon-submission/edit/project-files/' . $my_proposals_data->id);
            $creation_date = date('d-m-Y', $final_submission_data->creation_date);
        }
    }
    $final_submission_rows[$final_submission_data->id] = array(
        $creation_date,
        l($my_proposals_data->participant_name, 'user/' . $my_proposals_data->uid),
        $my_proposals_data->circuit_name,
        $action
    );
    /* check if there are any pending proposals */
     //!$pending_rows
    $final_submission_header = array(
        'Date of Submission',
        'Name',
        'Circuit Name',
        ''
    );
    //$output = theme_table($pending_header, $pending_rows);
    
    $output .= theme('table', array(
        'header' => $final_submission_header,
        'rows' => $final_submission_rows
    ));
    
    $output .= "<p>Literature Survey</p>";
    $my_proposal_rows = array();
    $last_date = "2021-06-21 23:59:59.0";
    if($today > $last_date){
        $action =   l('Download Literature Survey Report', 'hackathon-submission/generate-report/literature-survey/' . $my_proposals_data->id);  
    }
    else{
    $action =   l('Download Literature Survey Report', 'hackathon-submission/generate-report/literature-survey/' . $my_proposals_data->id) . ' | ' . l('Edit', 'hackathon-submission/edit/literature-report/' . $my_proposals_data->id);
    }
    $my_proposal_rows[$my_proposals_data->id] = array(
        date('d-m-Y', $my_proposals_data->creation_date),
        l($my_proposals_data->participant_name, 'user/' . $my_proposals_data->uid),
        $my_proposals_data->circuit_name,
        $action
    );
    /* check if there are any pending proposals */
    if (!$my_proposal_rows)
    {
        drupal_set_message(t('You do not have any active submissions. To submit, click ') . l('here', 'hackathon-submission/add/literature-report'), 'status');
        return '';
    } //!$pending_rows
    $my_proposal_header = array(
        'Date of Submission',
        'Name',
        'Circuit Name',
        ''
    );
    //$output = theme_table($pending_header, $pending_rows);
    $output .= theme('table', array(
        'header' => $my_proposal_header,
        'rows' => $my_proposal_rows
    ));
    return $output;
}


function hackathon_submission_display_all_submissions()
{
    global $user;
    /* get pending submissions to be approved */
    if ($user->uid == 0)
    {
        $msg = drupal_set_message(t('It is mandatory to login on this website to view all submissions. If you are new user please create a new account first.'), 'error');
        //drupal_goto('/pssp');
        drupal_goto('user/login', array('query' => drupal_get_destination()));
        return $msg;
    }
    $my_submission_rows = array();
    $query = db_select('hackathon_literature_survey');
    $query->fields('hackathon_literature_survey');
    //$query->condition('approval_status', 2);
    //$query->condition('uid',$user->uid);
    $query->orderBy('id', 'DESC');
    $my_submissions_q = $query->execute();
    $output = "<p>Total number of submissions: " . $my_submissions_q->rowCount() . "</p><p>Click <a href='download-emails'>here</a> to download the Email IDs of the participants";
    while ($my_submissions_data = $my_submissions_q->fetchObject())
    {
        $query = db_select('hackathon_final_submission');
        $query->fields('hackathon_final_submission');
        //$query->condition('approval_status', 2);
        $query->condition('literature_survey_id',$my_submissions_data->id);
        $query->orderBy('id', 'DESC');
        $final_submissions_q = $query->execute();
        $final_submission_data = $final_submissions_q->fetchObject();
        $action =   l('Download Literature Survey Report', 'hackathon-submission/generate-report/literature-survey/' . $my_submissions_data->id);  
        $my_submission_rows[$my_submissions_data->id] = array(
            date('d-m-Y', $my_submissions_data->creation_date),
            l($my_submissions_data->participant_name, 'user/' . $my_submissions_data->uid),
            $my_submissions_data->circuit_name,
            $action
        );
    } //$pending_data = $pending_q->fetchObject()
    /* check if there are any pending submissions */
    if (!$my_submission_rows)
    {
        drupal_set_message(t('You do not have any active submissions. To submit, click ') . l('here', 'hackathon-submission/add/literature-report'), 'status');
        return '';
    } //!$pending_rows
    $my_submission_header = array(
        'Date of Submission',
        'Name',
        'Circuit Name',
        ''
    );
    //$output = theme_table($pending_header, $pending_rows);
    $output .= theme('table', array(
        'header' => $my_submission_header,
        'rows' => $my_submission_rows
    ));
    return $output;
}

function hackathon_submission_display_final_submissions()
{
    global $user;
    /* get pending submissions to be approved */
    if ($user->uid == 0)
    {
        $msg = drupal_set_message(t('It is mandatory to login on this website to view all submissions. If you are new user please create a new account first.'), 'error');
        //drupal_goto('/pssp');
        drupal_goto('user/login', array('query' => drupal_get_destination()));
        return $msg;
    }
    $my_submission_rows = array();
    $query = db_select('hackathon_final_submission');
    $query->fields('hackathon_final_submission');
    //$query->condition('approval_status', 2);
    //$query->condition('uid',$user->uid);
    $query->orderBy('id', 'DESC');
    $my_submissions_q = $query->execute();
    $output = "<p>Total number of submissions: " . $my_submissions_q->rowCount();
    while ($my_submissions_data = $my_submissions_q->fetchObject())
    {
        $query = db_select('hackathon_literature_survey');
        $query->fields('hackathon_literature_survey');
        //$query->condition('approval_status', 2);
        $query->condition('id',$my_submissions_data->literature_survey_id);
        $query->orderBy('id', 'DESC');
        $final_submissions_q = $query->execute();
        $final_submission_data = $final_submissions_q->fetchObject();
        $action =  l('Download Final Report', 'hackathon-submission/generate-report/final-submission/' . $my_submissions_data->id) . ' | ' . l('View Submission Details', 'hackathon-submission/view-details/final-submission/' . $final_submission_data->id);  
        $my_submission_rows[$my_submissions_data->id] = array(
            date('d-m-Y', $my_submissions_data->creation_date),
            l($final_submission_data->participant_name, 'user/' . $final_submission_data->uid),
            $final_submission_data->circuit_name,
            $action
        );
    } //$pending_data = $pending_q->fetchObject()
    /* check if there are any pending submissions */
    if (!$my_submission_rows)
    {
        drupal_set_message(t('You do not have any active submissions. To submit, click ') . l('here', 'hackathon-submission/add/literature-report'), 'status');
        return '';
    } //!$pending_rows
    $my_submission_header = array(
        'Date of Submission',
        'Name',
        'Circuit Name',
        ''
    );
    //$output = theme_table($pending_header, $pending_rows);
    $output .= theme('table', array(
        'header' => $my_submission_header,
        'rows' => $my_submission_rows
    ));
    return $output;
}


function hackathon_submission_view_final_submissions_details_form($form, &$form_state)
{
    global $user;
    /* get current proposal */
    $submission_id = (int) arg(3);
    $submission_q = db_query("SELECT * FROM {hackathon_literature_survey} WHERE id = :id", array(
        ':id' => $submission_id
    ));
    $submission_data = $submission_q->fetchObject();
    $final_submission_q = db_query("SELECT * FROM {hackathon_final_submission} WHERE literature_survey_id = :literature_survey_id", array(
        ':literature_survey_id' => $submission_id
    ));
    $final_submission_data = $final_submission_q->fetchObject();

    $form['contributor_name'] = array(
        '#type' => 'item',
        '#markup' => $submission_data->participant_name,
        '#title' => t('Student name')
    );
    $form['student_email_id'] = array(
        '#title' => t('Student Email'),
        '#type' => 'item',
        '#markup' => $submission_data->participant_email,
        '#title' => t('Email')
    );
    $form['university'] = array(
        '#type' => 'item',
        '#markup' => $submission_data->institute,
        '#title' => t('Institute')
    );
    $form['abstract'] = array(
        '#type' => 'item',
        '#markup' => $final_submission_data->abstract,
        '#title' => t('Abstract')
    );
    $form['circuit_details'] = array(
        '#type' => 'item',
        '#markup' => $final_submission_data->circuit_details,
        '#title' => t('Circuit Details')
    );
    $form['cancel'] = array(
        '#type' => 'markup',
        '#markup' => l(t('Cancel'), 'hackathon-submission/all-submissions')
    );
    return $form;
}


function hackathon_submission_download_emails(){
    global $user;
    /* get pending submissions to be approved */
    if ($user->uid == 0)
    {
        $msg = drupal_set_message(t('It is mandatory to login on this website to download the email IDs of the participants. If you are new user please create a new account first.'), 'error');
        //drupal_goto('/pssp');
        drupal_goto('user/login', array('query' => drupal_get_destination()));
        return $msg;
    }
    $root_path = hackathon_submission_files_path();
    $my_submission_rows = array();
    $query = db_select('hackathon_literature_survey');
    $query->fields('hackathon_literature_survey');
    //$query->condition('approval_status', 2);
    //$query->condition('uid',$user->uid);
    $all_submissions_q = $query->execute();
    $participants_email_id_file = $root_path . "participants-emails.csv";
    //var_dump($participants_email_id_file);die;
    $fp = fopen($participants_email_id_file, "w");
            /* making the first row */
            $item = array(
                "Email ID"
            );
            fputcsv($fp, $item);

            while($row = $all_submissions_q->fetchObject()) {
                $item = array(
                    $row->participant_email
                );
                fputcsv($fp, $item);
            }
            fclose($fp);
            if($participants_email_id_file){
        ob_clean();
            header("Pragma: public");
            header("Expires: 0");
            header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
            header("Cache-Control: public");
            header("Content-Description: File Transfer");
            header('Content-Type: application/csv');
            header('Content-disposition: attachment; filename=email-ids.csv');
            header('Content-Length:' . filesize($participants_email_id_file));
            header("Content-Transfer-Encoding: binary");
            header('Expires: 0');
            header('Pragma: no-cache');
            readfile($participants_email_id_file);
            /*ob_end_flush();
            ob_clean();
            flush();*/
        }
}

function hackathon_submission_files_path() {
  return $_SERVER['DOCUMENT_ROOT'] . base_path() . 'esim_uploads/hackathon_submission_uploads/';
}

function _hs_dir_name($circuit_name, $participant_name)
{
    $circuit_name = hs_ucname($circuit_name);
    $participant_name = hs_ucname($participant_name);
    $dir_name = $circuit_name . ' By ' . $participant_name;
    $directory_name = str_replace("__", "_", str_replace(" ", "_", str_replace("/","_", trim($dir_name))));
    return $directory_name;
}

function hs_convert_special_characters($string){
    $string_to_replace = $string;
    $special_chars = array("_", "&", "%", "#", "{", "}", "^", "μ","̊", "±", "ω", "π", "Σ", "Ω", "ρ", "λ", "φ","α","β", "∆", "∑");
    $replace_special_chars = array("\_", "\&", "\%", "\#", "\{", "\}", "\^", "$\mu$", "$^{\circ}$", "$\pm$", "$\omega$", "$\pi$", "$\sigma$", "$\Omega$", '$\rho$', "$\lambda$", '$\varphi$', "$\alpha$", "$\beta$", "$\Delta$", "$\Sigma$");
    $final_string = str_replace($special_chars, $replace_special_chars, $string_to_replace);
    return $final_string;
}

function hs_ucname($string)
{
    $string = ucwords(strtolower($string));
    foreach (array(
        '-',
        '\''
    ) as $delimiter)
    {
        if (strpos($string, $delimiter) !== false)
        {
            $string = implode($delimiter, array_map('ucfirst', explode($delimiter, $string)));
        } //strpos($string, $delimiter) !== false
    } //array( '-', '\'' ) as $delimiter
    return $string;
}

function send_mail_hackathon($from, $to, $subject, $message, $from1,$bcc,$cc) {
        $my_module = 'hackathon_submission';
        $my_mail_token = microtime();
        $message = array(
            'id' => $my_module . '_' . $my_mail_token,
            'to' => $to,
            'subject' => $subject,
            'body' => array($message),
            'headers' => array(
                'From' => $from1, 
                'Return-Path' => $from1,
                'Bcc' => $bcc,
		'Cc'=>$cc,
            ),
        );
        $system = drupal_mail_system($my_module, $my_mail_token);
        $message = $system->format($message);
        if ($system->mail($message)) {
            return TRUE;
        }
        else {
            return FALSE;
        }
    }

function hackathon_submission_download_file()
{
  $submission_id = arg(3);
  $filename = arg(4);
  $root_path = hackathon_submission_files_path();
  /*$query = db_select('submission_hackathon2021');
  $query->fields('submission_hackathon2021');
  $query->condition('id', $submission_id);
  $submission_data = $query->execute()->fetchObject();
  $sub_dir_path = $submission_data->directory_name . '/subcircuit_files/';*/
 
  $query = db_select('submission_files_hackathon2021');
          $query->fields('submission_files_hackathon2021');
          $query->condition('submission_id', $submission_id);
          $query->condition('filename', $filename);
          $query->range(0, 1);
          $files_q = $query->execute();
          $file_data = $files_q->fetchObject();
          //var_dump($root_path . $sub_dir_path . $file_data->filename);die;
          ob_clean();
    header("Pragma: public");
    header("Expires: 0");
    header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
    header("Cache-Control: public");
    header("Content-Description: File Transfer");
  header('Content-Type:' . $file_data->filemime);
  header('Content-disposition: attachment; filename="'.$file_data->filename.'"');
  header('Content-Length: ' . filesize($root_path . $file_data->filepath));/*
   ob_clean();
        flush();*/
  ob_clean();
  readfile($root_path . $file_data->filepath);
  
}    

function hackathon_submission_download_pdf_file()
{
  $id = arg(3);
  $root_path = hackathon_submission_upload_path();

 
  $query = db_select('custom_kicad_convertor');
          $query->fields('custom_kicad_convertor');
          $query->condition('id', $id);
          $query->range(0, 1);
          $files_q = $query->execute();
          $file_data = $files_q->fetchObject();

	$pdffilearray=explode('@',$file_data->description_pdf_path);
	$pdffilenamepath=$pdffilearray[0];
	$pdffilearray2=explode('/',$pdffilenamepath);
	$pdffilename=$pdffilearray2[1];
	

  header('Content-Type: application/pdf');
  header('Content-disposition: attachment; filename="'.$pdffilename.'"');
  header('Content-Length: ' . filesize($root_path ."/". $file_data->description_pdf_path));
   ob_clean();
        flush();
  readfile($root_path ."/". $file_data->description_pdf_path);
  
}


function hackathon_submission_download_pspice_file()
{
  $id = arg(3);
  $root_path = hackathon_submission_upload_path();


  $query = db_select('custom_kicad_convertor');
          $query->fields('custom_kicad_convertor');
          $query->condition('id', $id);
          $query->range(0, 1);
          $files_q = $query->execute();
          $file_data = $files_q->fetchObject();

  header('Content-Type:'.$file_data->upload_filemime);
  header('Content-disposition: attachment; filename="'.$file_data->upload_filename.'"');
  header('Content-Length: ' . filesize($root_path. $file_data->upload_filepath));
 ob_clean();
        flush();

  readfile($root_path. $file_data->upload_filepath);
  
}